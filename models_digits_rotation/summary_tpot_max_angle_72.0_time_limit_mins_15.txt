Actual train time: 0:15:59

Steps:
0. StackingEstimator(estimator=GradientBoostingClassifier(ccp_alpha=0.0,
                                                       criterion='friedman_mse',
                                                       init=None,
                                                       learning_rate=0.1,
                                                       loss='deviance',
                                                       max_depth=3,
                                                       max_features=0.5,
                                                       max_leaf_nodes=None,
                                                       min_impurity_decrease=0.0,
                                                       min_impurity_split=None,
                                                       min_samples_leaf=14,
                                                       min_samples_split=10,
                                                       min_weight_fraction_leaf=0.0,
                                                       n_estimators=100,
                                                       n_iter_no_change=None,
                                                       presort='deprecated',
                                                       random_state=42,
                                                       subsample=0.5,
                                                       tol=0.0001,
                                                       validation_fraction=0.1,
                                                       verbose=0,
                                                       warm_start=False))
1. StackingEstimator(estimator=LogisticRegression(C=5.0, class_weight=None,
                                               dual=False, fit_intercept=True,
                                               intercept_scaling=1,
                                               l1_ratio=None, max_iter=100,
                                               multi_class='auto', n_jobs=None,
                                               penalty='l2', random_state=42,
                                               solver='lbfgs', tol=0.0001,
                                               verbose=0, warm_start=False))
2. KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=1, p=1,
                     weights='distance')
