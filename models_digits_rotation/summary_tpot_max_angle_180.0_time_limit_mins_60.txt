Actual train time: 1:10:59

Steps:
0. StackingEstimator(estimator=GradientBoostingClassifier(ccp_alpha=0.0,
                                                       criterion='friedman_mse',
                                                       init=None,
                                                       learning_rate=0.001,
                                                       loss='deviance',
                                                       max_depth=10,
                                                       max_features=0.1,
                                                       max_leaf_nodes=None,
                                                       min_impurity_decrease=0.0,
                                                       min_impurity_split=None,
                                                       min_samples_leaf=14,
                                                       min_samples_split=3,
                                                       min_weight_fraction_leaf=0.0,
                                                       n_estimators=100,
                                                       n_iter_no_change=None,
                                                       presort='deprecated',
                                                       random_state=42,
                                                       subsample=0.4,
                                                       tol=0.0001,
                                                       validation_fraction=0.1,
                                                       verbose=0,
                                                       warm_start=False))
1. StackingEstimator(estimator=XGBClassifier(base_score=0.5, booster=None,
                                          colsample_bylevel=1,
                                          colsample_bynode=1,
                                          colsample_bytree=1, gamma=0,
                                          gpu_id=-1, importance_type='gain',
                                          interaction_constraints=None,
                                          learning_rate=0.001, max_delta_step=0,
                                          max_depth=2, min_child_weight=9,
                                          missing=nan,
                                          monotone_constraints=None,
                                          n_estimators=100, n_jobs=1, nthread=1,
                                          num_parallel_tree=1,
                                          objective='multi:softprob',
                                          random_state=42, reg_alpha=0,
                                          reg_lambda=1, scale_pos_weight=None,
                                          subsample=0.15000000000000002,
                                          tree_method=None,
                                          validate_parameters=False,
                                          verbosity=None))
2. StackingEstimator(estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                   class_weight=None,
                                                   criterion='entropy',
                                                   max_depth=8,
                                                   max_features=None,
                                                   max_leaf_nodes=None,
                                                   min_impurity_decrease=0.0,
                                                   min_impurity_split=None,
                                                   min_samples_leaf=5,
                                                   min_samples_split=12,
                                                   min_weight_fraction_leaf=0.0,
                                                   presort='deprecated',
                                                   random_state=42,
                                                   splitter='best'))
3. StackingEstimator(estimator=GradientBoostingClassifier(ccp_alpha=0.0,
                                                       criterion='friedman_mse',
                                                       init=None,
                                                       learning_rate=0.001,
                                                       loss='deviance',
                                                       max_depth=5,
                                                       max_features=1.0,
                                                       max_leaf_nodes=None,
                                                       min_impurity_decrease=0.0,
                                                       min_impurity_split=None,
                                                       min_samples_leaf=4,
                                                       min_samples_split=5,
                                                       min_weight_fraction_leaf=0.0,
                                                       n_estimators=100,
                                                       n_iter_no_change=None,
                                                       presort='deprecated',
                                                       random_state=42,
                                                       subsample=0.6000000000000001,
                                                       tol=0.0001,
                                                       validation_fraction=0.1,
                                                       verbose=0,
                                                       warm_start=False))
4. StackingEstimator(estimator=GradientBoostingClassifier(ccp_alpha=0.0,
                                                       criterion='friedman_mse',
                                                       init=None,
                                                       learning_rate=0.001,
                                                       loss='deviance',
                                                       max_depth=5,
                                                       max_features=1.0,
                                                       max_leaf_nodes=None,
                                                       min_impurity_decrease=0.0,
                                                       min_impurity_split=None,
                                                       min_samples_leaf=4,
                                                       min_samples_split=20,
                                                       min_weight_fraction_leaf=0.0,
                                                       n_estimators=100,
                                                       n_iter_no_change=None,
                                                       presort='deprecated',
                                                       random_state=42,
                                                       subsample=0.6000000000000001,
                                                       tol=0.0001,
                                                       validation_fraction=0.1,
                                                       verbose=0,
                                                       warm_start=False))
5. StackingEstimator(estimator=SGDClassifier(alpha=0.0, average=False,
                                          class_weight=None,
                                          early_stopping=False, epsilon=0.1,
                                          eta0=1.0, fit_intercept=True,
                                          l1_ratio=0.5,
                                          learning_rate='invscaling',
                                          loss='hinge', max_iter=1000,
                                          n_iter_no_change=5, n_jobs=None,
                                          penalty='elasticnet', power_t=0.0,
                                          random_state=42, shuffle=True,
                                          tol=0.001, validation_fraction=0.1,
                                          verbose=0, warm_start=False))
6. KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=2, p=2,
                     weights='distance')
